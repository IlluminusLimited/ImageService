# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
defaults: &defaults
  working_directory: /build
  docker:
    - image: pinster/node:8

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name:  Build
          command:  cd lambda && npm install --production
      - persist_to_workspace:
          root: /build
          paths:
            - lambda

  test:
    working_directory: ~/repo
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run:
          name: Install
          command: cd lambda && npm install
      - run:
          name: Run tests
          command: cd lambda && npm test

  deploy-dev:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /build
      - run:
          name: Install rubygems
          command: |
            gem install bundler --no-rdoc --no-ri
            bundle install
      - run:
          name: Install serverless
          command: npm install -g serverless
      - run:
          name: Install deploy packages
          command: npm install
      - run:
          name: Create Domain
          command: ruby serverless.rb create_domain dev false
      - run:
          name: Deploy
          command: sls deploy --stage dev -v

  deploy-prod:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /build
      - run:
          name: Install rubygems
          command: |
            gem install bundler --no-rdoc --no-ri
            bundle install
      - run:
          name: Install serverless
          command: npm install -g serverless
      - run:
          name: Install deploy packages
          command: npm install
      - run:
          name: Package
          command: ruby serverless.rb create_domain prod false
      - run:
          name: Deploy
          command: sls deploy --stage prod -v

workflows:
  version: 2
  commit:
    jobs:
      - build:
          filters:
            branches:
              only:
                - develop
                - master
      - test
      - deploy-dev:
          requires:
            - test
            - build
          filters:
            branches:
              only:
                - develop
      - deploy-prod:
          requires:
            - test
            - build
          filters:
            branches:
              only:
                - master

