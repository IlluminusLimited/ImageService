service: image-service

provider:
  name: aws
  runtime: nodejs6.10
  region: us-east-1
  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${self:custom.profiles.${self:provider.stage}, 'default'}
  endpointType: REGIONAL
  deploymentBucket:
      name: "pinster-serverless-deploy-${self:custom.profiles.${self:provider.stage}}"
  package:
    exclude:
      - .git/**
      - .circleci/
      - lambda/test
      - node_modules
      - "*.md"

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::${self:custom.imageUploaderBucket}/*"

    - Effect: "Allow"
      Action:
        - "states:StartExecution"
      Resource:
        - "*"

    - Effect: "Allow"
      Action:
        - "rekognition:*"
      Resource:
        - "*"

    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
      Resource:
        - "arn:aws:lambda:::${self:custom.imageUploaderBucket}/*"
custom:
  defaultStage: dev
  profiles:
    dev: dev
    prod: prod
  customDomain:
    domainName: image-service.api-${self:provider.stage}.pinster.info
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
  imageBucketUrl: http://pinster-image-service-${self:provider.stage}.s3-website-#{AWS::Region}.amazonaws.com

  # if the bucket name is changed then you must go to the resources section and change it there too!
  # This is a stupid limitation of serverless
  # https://github.com/serverless/serverless/issues/2486
  # https://github.com/serverless/serverless/issues/2749
  imageUploaderBucket: pinster-image-service


functions:
  imageUploader:
    handler: lambda/lambda.upload
    events:
      - http:
          method: post
          path: images/upload
          cors: true
    memorySize: 1024
    environment:
          BUCKET_NAME: ${self:custom.imageUploaderBucket}

  startExecution:
    handler: lambda/lambda.startExecution
    events:
      - s3:
          bucket: ${self:custom.imageUploaderBucket}
          event: s3:ObjectCreated:*
          rules:
            - prefix: raw/
    memorySize: 128
    environment:
      STATEMACHINE_ARN: ${self:resources.Outputs.ThumbnailProcessor.Value}

  generateThumbnail:
    handler: lambda/lambda.generateThumbnail
    events:
      - http:
          method: get
          path: images/generate
          cors: true
    memorySize: 1024
    environment:
          BUCKET: ${self:custom.imageUploaderBucket}
          URL: ${self:custom.imageBucketUrl}

  moderate:
    handler: lambda/lambda.moderate
    memorySize: 128


  notifySuccess:
    handler: lambda/integrator.notifySuccess
    memorySize: 128

  notifyFailure:
    handler: lambda/integrator.notifyFailure
    memorySize: 128

stepFunctions:
  stateMachines:
    thumbnailProcessor:
      name: thumbnailProcessor
      definition:
        Comment: "StateMachine that turns raw images into thumbnails"
        StartAt: Moderate
        States:
          Moderate:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-moderate"
            Next: NotifyIntegrationsSuccess
            Catch:
            - ErrorEquals:
              - ModerationThresholdExceeded
              Next: NotifyIntegrationsFailure
          NotifyIntegrationsSuccess:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-notify-success"
            End: true
          NotifyIntegrationsFailure:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-notify-failure"
            End: true

resources:
  Resources:
  # if the bucket name is changed then this resource name must be changed! This is a stupid limitation of serverless
  # https://github.com/serverless/serverless/issues/2486
  # https://github.com/serverless/serverless/issues/2749
    S3BucketPinsterimageservice:
      Type: 'AWS::S3::Bucket'
      Properties:
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders: ['*']
              AllowedMethods: [GET, PUT, POST, HEAD]
              AllowedOrigins: ['*']
              MaxAge: '3600'
        WebsiteConfiguration:
                IndexDocument: index.html
                RoutingRules:
                - RedirectRule:
                    HostName: ${self:custom.customDomain.domainName}
                    HttpRedirectCode: 307
                    Protocol: https
                    ReplaceKeyPrefixWith: images/generate?key=
                  RoutingRuleCondition:
                    HttpErrorCodeReturnedEquals: 404
    S3BucketPermissions:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: ${self:custom.imageUploaderBucket}
        PolicyDocument:
          Statement:
            - Principal: "*"
              Action:
                - s3:GetObject
              Effect: Allow
              Sid: "AddPerm"
              Resource: arn:aws:s3:::${self:custom.imageUploaderBucket}/*

  Outputs:
    ThumbnailProcessor:
      Description: The ARN of the ThumbnailProcessor state machine
      Value:
        Ref: ThumbnailProcessor

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters
  - serverless-domain-manager
